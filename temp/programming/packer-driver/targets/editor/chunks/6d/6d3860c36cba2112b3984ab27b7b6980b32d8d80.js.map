{"version":3,"sources":["file:///Users/raopinwu/workspace/ccs/fitSreen/FitScreen/assets/scripts/Main.ts"],"names":["_decorator","Component","View","macro","view","ResolutionPolicy","ccclass","property","Main","start","instance","setResizeCallback","init","checkLand","frameSize","getFrameSize","width","height","canvas","node","setOrientation","ORIENTATION_PORTRAIT","setDesignResolutionSize","SHOW_ALL","console","log","FIXED_WIDTH","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAmBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,gB,OAAAA,gB;;;;;;;;;OAC/D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U,GAE9B;AACA;AAEA;;sBAGaQ,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BP,SAD1B,CACoC;AAEhCQ,QAAAA,KAAK,GAAG;AACJ;AACA;AACA;AACAP,UAAAA,IAAI,CAACQ,QAAL,CAAcC,iBAAd,CAAgC,MAAI;AAChC,iBAAKC,IAAL;AACH,WAFD,EAJI,CAOJ;;AACA,eAAKA,IAAL;AACH;;AAEOC,QAAAA,SAAS,GAAW;AACxB,cAAIC,SAAc,GAAGZ,IAAI,CAACQ,QAAL,CAAcK,YAAd,EAArB;AACA,iBAAOD,SAAS,CAACE,KAAV,GAAgBF,SAAS,CAACG,MAAjC;AACH;;AAEOL,QAAAA,IAAI,GAAE;AACV,cAAIM,MAAW,GAAG,KAAKC,IAAvB;;AACA,cAAG,KAAKN,SAAL,EAAH,EAAoB;AAChB;AACA;AACA;AACAT,YAAAA,IAAI,CAACgB,cAAL,CAAoBjB,KAAK,CAACkB,oBAA1B;AACAjB,YAAAA,IAAI,CAACkB,uBAAL,CAA6B,GAA7B,EAAiC,IAAjC,EAAsCjB,gBAAgB,CAACkB,QAAvD;AACH,WAND,MAMK;AACDrB,YAAAA,IAAI,CAACQ,QAAL,CAAcU,cAAd,CAA6BjB,KAAK,CAACkB,oBAAnC,EADC,CAED;AACA;;AACAnB,YAAAA,IAAI,CAACQ,QAAL,IAAiBN,IAAjB,GAAsBoB,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAtB,GAA0CD,OAAO,CAACC,GAAR,CAAY,OAAZ,CAA1C;AACArB,YAAAA,IAAI,CAACkB,uBAAL,CAA6B,GAA7B,EAAiC,IAAjC,EAAsCjB,gBAAgB,CAACqB,WAAvD;AACH;AACJ;AAGD;;;AACAC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAvC+B,O","sourcesContent":["import { _decorator, Component, Node, View, macro, Size, Vec3, view, ResolutionPolicy } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// property{\n//     canvasRot:number,\n\n// }\n\n@ccclass('Main')\nexport class Main extends Component {\n    \n    start() {\n        // View.instance.getResolutionPolicy();\n        // View.instance.getDesignResolutionSize();\n        // View.instance.setResolutionPolicy(macro.ORIENTATION_PORTRAIT);\n        View.instance.setResizeCallback(()=>{\n            this.init();\n        });\n        // view.setOrientation(macro.ORIENTATION_PORTRAIT);\n        this.init();\n    }\n\n    private checkLand():boolean {\n        let frameSize:Size = View.instance.getFrameSize();\n        return frameSize.width>frameSize.height;\n    }\n\n    private init(){\n        let canvas:Node = this.node;\n        if(this.checkLand()){\n            // canvas.setRotationFromEuler(new Vec3(0,0,-90));\n            // canvas.angle = -90;\n            // View.instance.setOrientation(macro.ORIENTATION_PORTRAIT);\n            view.setOrientation(macro.ORIENTATION_PORTRAIT);\n            view.setDesignResolutionSize(750,1136,ResolutionPolicy.SHOW_ALL)\n        }else{\n            View.instance.setOrientation(macro.ORIENTATION_PORTRAIT);\n            // canvas.setRotationFromEuler(new Vec3(0,0,0));\n            // canvas.angle = 0;\n            View.instance == view?console.log(\"true\"):console.log(\"false\");\n            view.setDesignResolutionSize(750,1136,ResolutionPolicy.FIXED_WIDTH);\n        }\n    }\n\n\n    /*  */\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}