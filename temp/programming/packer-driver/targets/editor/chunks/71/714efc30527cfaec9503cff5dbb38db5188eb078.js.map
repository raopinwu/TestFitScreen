{"version":3,"sources":["file:///Users/raopinwu/workspace/ccs/fitSreen/FitScreen/assets/scripts/Main.ts"],"names":["_decorator","Component","View","Vec3","ccclass","property","Main","start","instance","setResizeCallback","init","checkLand","frameSize","getFrameSize","width","height","canvas","node","getChildByName","setRotationFromEuler","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAmBC,MAAAA,I,OAAAA,I;;;;;;;;;OACnD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U,GAE9B;AACA;AAEA;;sBAGaM,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BL,SAD1B,CACoC;AAEhCM,QAAAA,KAAK,GAAG;AACJ;AACA;AACA;AACAL,UAAAA,IAAI,CAACM,QAAL,CAAcC,iBAAd,CAAgC,MAAI;AAChC,iBAAKC,IAAL;AACH,WAFD;AAGA,eAAKA,IAAL;AACH;;AAEOC,QAAAA,SAAS,GAAW;AACxB,cAAIC,SAAc,GAAGV,IAAI,CAACM,QAAL,CAAcK,YAAd,EAArB;AACA,iBAAOD,SAAS,CAACE,KAAV,GAAgBF,SAAS,CAACG,MAAjC;AACH;;AAEOL,QAAAA,IAAI,GAAE;AACV,cAAIM,MAAW,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,QAAzB,CAAlB;;AACA,cAAG,KAAKP,SAAL,EAAH,EAAoB;AAChBK,YAAAA,MAAM,CAACG,oBAAP,CAA4B,IAAIhB,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAC,EAAd,CAA5B;AACH,WAFD,MAEK;AACDa,YAAAA,MAAM,CAACG,oBAAP,CAA4B,IAAIhB,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAA5B;AACH;AACJ;AAGD;;;AACAiB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA9B+B,O","sourcesContent":["import { _decorator, Component, Node, View, macro, Size, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// property{\n//     canvasRot:number,\n\n// }\n\n@ccclass('Main')\nexport class Main extends Component {\n    \n    start() {\n        // View.instance.getResolutionPolicy();\n        // View.instance.getDesignResolutionSize();\n        // View.instance.setResolutionPolicy(macro.ORIENTATION_PORTRAIT);\n        View.instance.setResizeCallback(()=>{\n            this.init();\n        });\n        this.init();\n    }\n\n    private checkLand():boolean {\n        let frameSize:Size = View.instance.getFrameSize();\n        return frameSize.width>frameSize.height;\n    }\n\n    private init(){\n        let canvas:Node = this.node.getChildByName(\"Canvas\");\n        if(this.checkLand()){\n            canvas.setRotationFromEuler(new Vec3(0,0,-90));\n        }else{\n            canvas.setRotationFromEuler(new Vec3(0,0,0));\n        }\n    }\n\n\n    /*  */\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}