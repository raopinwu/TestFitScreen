{"version":3,"sources":["file:///Users/raopinwu/workspace/ccs/fitSreen/FitScreen/extensions/magic-book/assets/src/system/audio/mb_audio.ts"],"names":["MyAudioSource","AudioSource","Node","clamp01","game","sys","js","mb_base","mb_decorator","__volume_scale","__func_ended","__type","mb_audio","func_call_info_log","func_call_debug_log","_get_AudioSource_comp","name","_data","node_root","addPersistRootNode","on","EventType","ENDED","_on_event_play_ended","source","addComponent","clip","map_clips","get","_get_audio_source","cur_audio_channel","max_audio_channel","log_warn","has","_destroy_source","emit","const","event_destroy_audio","destroy","_remove_source","list_source","index","indexOf","splice","log_debug","uuid","loop","list_music_sources","list_effect_sources","_play","func_ended","play","event_play_audio","type_music","_call_music","cb","forEach","_call_effect","constructor","Map","_music_volume","_effect_volume","music_volume","localStorage","getItem","storage_music_volume","isString","Number","effect_volume","storage_effect_volume","value","setItem","toString","volume","cur_audio_music_channel","cur_audio_effect_channel","count","i","length","playing","maxAudioChannel","load_res","audio_clips","set","addRef","unload_res","delete","decRef","play_music","audio_clip_name","is_loop","volume_scale","push","play_effect","type_effect","pause_all","pause_all_music","pause_all_effect","pause","resume_all","resume_all_music","resume_all_effect","stop_all","stop_all_music","stop_all_effect","stop","clear_all","clear_all_music","clear_all_effect","get_AudioSource_by_uuid"],"mappings":"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","sourcesContent":["import { AudioClip, AudioSource, Node, clamp01, game, sys, js } from \"cc\";\nimport mb_base from \"../../common/base/mb_base\";\nimport mb_decorator from \"../../common/decorator/mb_decorator\";\nclass MyAudioSource extends AudioSource {\n    /**\n     * 播放音量倍数，0.01-1,未设置默认为1\n     */\n    __volume_scale: number;\n    /**\n     * 播放完成回调\n     */\n    __func_ended: (source: AudioSource) => void;\n    /**\n     * 类型\n     */\n    __type: string;\n}\ntype audio_data = {\n    map_clips: Map<string, AudioClip>;\n    list_music_sources: MyAudioSource[];\n    list_effect_sources: MyAudioSource[];\n    node_root: Node | null;\n};\n/**\n * @name 声音系统\n * https://gitee.com/magician-f/cocos-magic-book\n */\nexport default class mb_audio extends mb_base {\n\n    public static const = {\n        storage_music_volume: \"magic-book-music_volume\",\n        storage_effect_volume: \"magic-book-effect_volume\",\n        event_play_audio: \"magic-book-play_audio\",\n        event_destroy_audio: \"magic-book-destroy_audio\",\n        type_music: \"music\",\n        type_effect: \"effect\",\n    };\n\n    protected name: string = \"magic_audio\";\n\n    private _data: audio_data = {\n        map_clips: new Map<string, AudioClip>(),\n        list_music_sources: [],\n        list_effect_sources: [],\n        node_root: null\n    };\n\n    private _music_volume: number = 1;\n    private _effect_volume: number = 1;\n\n    private _get_AudioSource_comp(name: string): MyAudioSource {\n        if (!this._data.node_root) {\n            this._data.node_root = new Node();\n            game.addPersistRootNode(this._data.node_root);\n            this._data.node_root.on(AudioSource.EventType.ENDED, this._on_event_play_ended, this);\n        }\n        let source = this._data.node_root.addComponent(AudioSource) as MyAudioSource;\n        source.clip = this._data.map_clips.get(name);\n        return source;\n    }\n\n    private _get_audio_source(name: string): MyAudioSource {\n        if (this.cur_audio_channel >= this.max_audio_channel) {\n            this.log_warn(`[play] cur audio channel >= max audio channel ${this.max_audio_channel}`);\n            return null;\n        }\n        if (!this._data.map_clips.has(name)) {\n            this.log_warn(`[play] not found: [${name}] audio_clip`);\n            return null;\n        }\n        let source = this._get_AudioSource_comp(name);\n        source.name = name;\n        return source;\n    }\n\n    private _destroy_source(source: AudioSource) {\n        game.emit(mb_audio.const.event_destroy_audio, source);\n        source.destroy();\n    }\n\n    /** 移除单个声音 */\n    private _remove_source(list_source: AudioSource[], source: AudioSource) {\n        let index = list_source.indexOf(source);\n        if (list_source[index]) {\n            list_source.splice(index, 1);\n            this._destroy_source(source);\n        }\n    }\n\n    /** 播放完成的回调 */\n    private _on_event_play_ended(source: MyAudioSource) {\n        this.log_debug(`play_ended:${source.name} ${source.uuid}`);\n        if (source.__func_ended) {\n            source.__func_ended(source);\n        }\n        if (source.loop) {\n            //除了循环播放的音乐都移除\n            return;\n        }\n        this._remove_source(this._data.list_music_sources, source);\n        this._remove_source(this._data.list_effect_sources, source);\n    }\n\n    private _play(source: MyAudioSource, func_ended: (source: AudioSource) => {}) {\n        source.__func_ended = func_ended;\n        source.play();\n        game.emit(mb_audio.const.event_play_audio, source, source.__type == mb_audio.const.type_music);\n    }\n\n    private _call_music(cb) {\n        this._data.list_music_sources.forEach(cb);\n    }\n\n    private _call_effect(cb) {\n        this._data.list_effect_sources.forEach(cb);\n    }\n\n    constructor() {\n        super();\n        let music_volume = sys.localStorage.getItem(mb_audio.const.storage_music_volume);\n        if (js.isString(music_volume)) {\n            this.music_volume = Number(music_volume) || 1;\n        }\n        let effect_volume = sys.localStorage.getItem(mb_audio.const.storage_effect_volume);\n        if (js.isString(effect_volume)) {\n            this.effect_volume = Number(effect_volume) || 1;\n        }\n    }\n\n    //======== 公开的方法\n\n    /**\n     * 全局音乐音量\n     */\n    public get music_volume(): number {\n        return this._music_volume;\n    }\n    public set music_volume(value: number) {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        this._music_volume = value;\n        sys.localStorage.setItem(mb_audio.const.storage_music_volume, this._music_volume.toString());\n        this._call_music((source: AudioSource) => {\n            source.volume = this._music_volume;\n        });\n    }\n\n    /**\n    * 全局音乐音量\n    */\n    public get effect_volume(): number {\n        return this._effect_volume;\n    }\n    public set effect_volume(value: number) {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        this._effect_volume = value;\n        sys.localStorage.setItem(mb_audio.const.storage_effect_volume, this._effect_volume.toString());\n        this._call_effect((source: AudioSource) => {\n            source.volume = this._effect_volume;\n        });\n    }\n\n    /**\n     * 当前播放的声音数量\n     */\n    public get cur_audio_channel() {\n        return this.cur_audio_music_channel + this.cur_audio_effect_channel;\n    }\n\n    /**\n     * 当前播放音乐的数量\n     */\n    public get cur_audio_music_channel() {\n        let count = 0;\n        for (let i = 0; i < this._data.list_music_sources.length; i++) {\n            count += this._data.list_music_sources[i].playing ? 1 : 0;\n        }\n        return count;\n    }\n\n    /**\n     * 当前播放音效的数量\n     */\n    public get cur_audio_effect_channel() {\n        let count = 0;\n        for (let i = 0; i < this._data.list_effect_sources.length; i++) {\n            count += this._data.list_effect_sources[i].playing ? 1 : 0;\n        }\n        return count;\n    }\n\n    /**\n     * 当前平台最大播放声音数量\n     */\n    public get max_audio_channel() {\n        return AudioSource.maxAudioChannel;\n    }\n\n    /**\n     * 安装资源\n     * @param audio_clips \n     */\n    @mb_decorator.func_call_info_log()\n    public load_res(audio_clips: AudioClip[]) {\n        for (let i = 0; i < audio_clips.length; i++) {\n            const clip = audio_clips[i];\n            const name = audio_clips[i].name;\n            this._data.map_clips.set(name, clip);\n            clip.addRef();\n        }\n    }\n\n    /**\n     * 卸载资源\n     * @param audio_clips \n     */\n    @mb_decorator.func_call_info_log()\n    public unload_res(audio_clips: AudioClip[]) {\n        for (let i = 0; i < audio_clips.length; i++) {\n            const clip = audio_clips[i];\n            const name = audio_clips[i].name;\n            if (this._data.map_clips.has(name)) {\n                this._data.map_clips.delete(name);\n                clip.decRef();\n            }\n        }\n    }\n\n    /**\n    * 播放音乐\n    * @param {string} audio_clip_name 声音资源名\n    * @param {boolean} is_loop 是否循环播放\n    * @param {number} volume_scale 单个声音音量大小系数,(0-1)，默认为1\n    * @param {Function} func_ended 播放完成回调(请在回调中马上使用 source，如果不是循环播放的音效，它将马上被销毁)\n    * @returns \n    */\n    @mb_decorator.func_call_debug_log()\n    public play_music(audio_clip_name: string, is_loop: boolean = true, volume_scale: number = 1, func_ended?: (source: AudioSource) => {}): string {\n        const source = this._get_audio_source(audio_clip_name);\n        if (!source) return null;\n        this._data.list_music_sources.push(source);\n        source.loop = is_loop;\n        source.volume = clamp01(this.music_volume * volume_scale);\n        source.__volume_scale = volume_scale;\n        source.__type = mb_audio.const.type_music;\n        this._play(source, func_ended);\n        return source.uuid;\n    }\n\n    /**\n    * 播放音效\n    * @param {string} audio_clip_name 音效名称\n    * @param {boolean} is_loop 是否循环播放\n    * @param {number} volume_scale 单个声音音量大小系数,(0-1)，默认为1\n    * @param {Function} func_ended 播放完成回调(请在回调中马上使用 source，如果不是循环播放的音效，它将马上被销毁)\n    * @returns \n    */\n    @mb_decorator.func_call_debug_log()\n    public play_effect(audio_clip_name: string, is_loop: boolean = false, volume_scale: number = 1, func_ended?: (source: AudioSource) => {}): string {\n        const source = this._get_audio_source(audio_clip_name);\n        if (!source) return null;\n        this._data.list_effect_sources.push(source);\n        source.loop = is_loop;\n        source.volume = clamp01(this.effect_volume * volume_scale);\n        source.__volume_scale = volume_scale;\n        source.__type = mb_audio.const.type_effect;\n        this._play(source, func_ended);\n        return source.uuid;\n    }\n\n    /**\n     * 暂停 所有声音\n     */\n    @mb_decorator.func_call_info_log()\n    public pause_all() {\n        this.pause_all_music();\n        this.pause_all_effect();\n    }\n\n    /**\n     * 暂停 所有音乐\n     */\n    @mb_decorator.func_call_info_log()\n    public pause_all_music() {\n        this._call_music((source: AudioSource) => {\n            source.pause();\n        });\n    }\n\n    /**\n     * 暂停 所有音效\n     */\n    @mb_decorator.func_call_info_log()\n    public pause_all_effect() {\n        this._call_effect((source: AudioSource) => {\n            source.pause();\n        });\n    }\n\n    /**\n     * 恢复 所有声音\n     */\n    @mb_decorator.func_call_info_log()\n    public resume_all() {\n        this.resume_all_music();\n        this.resume_all_effect();\n    }\n\n    /**\n     * 恢复 所有音乐\n     */\n    @mb_decorator.func_call_info_log()\n    public resume_all_music() {\n        this._call_music((source: AudioSource) => {\n            if (!source.playing) {\n                source.play();\n            }\n        });\n    }\n\n    /**\n     * 恢复 所有音效\n     */\n    @mb_decorator.func_call_info_log()\n    public resume_all_effect() {\n        this._call_effect((source: AudioSource) => {\n            if (!source.playing) {\n                source.play();\n            }\n        });\n    }\n\n    /**\n     * 停止 所有声音\n     */\n    @mb_decorator.func_call_info_log()\n    public stop_all() {\n        this.stop_all_music();\n        this.stop_all_effect();\n    }\n\n    /**\n     * 停止 所有音乐\n     */\n    @mb_decorator.func_call_info_log()\n    public stop_all_music() {\n        this._call_music((source: AudioSource) => {\n            source.stop();\n        });\n    }\n\n    /**\n     * 停止 所有音效\n     */\n    @mb_decorator.func_call_info_log()\n    public stop_all_effect() {\n        this._call_effect((source: AudioSource) => {\n            source.stop();\n        });\n    }\n    /**\n     * 停止并移除 所有声音\n     */\n    @mb_decorator.func_call_info_log()\n    public clear_all() {\n        this.clear_all_music();\n        this.clear_all_effect();\n    }\n\n    /**\n    * 停止并移除 所有音乐\n    */\n    @mb_decorator.func_call_info_log()\n    public clear_all_music() {\n        this._call_music((source: AudioSource) => {\n            this._destroy_source(source);\n        });\n        this._data.list_music_sources = [];\n    }\n\n    /**\n    * 停止并移除 所有音效\n    */\n    @mb_decorator.func_call_info_log()\n    public clear_all_effect() {\n        this._call_effect((source: AudioSource) => {\n            this._destroy_source(source);\n        });\n        this._data.list_effect_sources = [];\n    }\n\n    /**\n    * 根据id获得声音实例\n    */\n    public get_AudioSource_by_uuid(uuid: string): AudioSource {\n        for (let i = 0; i < this._data.list_music_sources.length; i++) {\n            if (this._data.list_music_sources[i].uuid == uuid) {\n                return this._data.list_music_sources[i];\n            }\n        }\n        for (let i = 0; i < this._data.list_effect_sources.length; i++) {\n            if (this._data.list_effect_sources[i].uuid == uuid) {\n                return this._data.list_effect_sources[i];\n            }\n        }\n        return null;\n    }\n\n}"]}