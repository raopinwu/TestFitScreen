{"version":3,"sources":["file:///Users/raopinwu/workspace/ccs/fitSreen/FitScreen/assets/scripts/Main.ts"],"names":["_decorator","Component","View","macro","view","ccclass","property","Main","start","instance","setResizeCallback","init","checkLand","frameSize","getFrameSize","width","height","canvas","node","setOrientation","ORIENTATION_PORTRAIT","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAmBC,MAAAA,I,OAAAA,I;;;;;;;;;OACzD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U,GAE9B;AACA;AAEA;;sBAGaO,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BN,SAD1B,CACoC;AAEhCO,QAAAA,KAAK,GAAG;AACJ;AACA;AACA;AACAN,UAAAA,IAAI,CAACO,QAAL,CAAcC,iBAAd,CAAgC,MAAI;AAChC,iBAAKC,IAAL;AACH,WAFD;AAGA,eAAKA,IAAL;AACH;;AAEOC,QAAAA,SAAS,GAAW;AACxB,cAAIC,SAAc,GAAGX,IAAI,CAACO,QAAL,CAAcK,YAAd,EAArB;AACA,iBAAOD,SAAS,CAACE,KAAV,GAAgBF,SAAS,CAACG,MAAjC;AACH;;AAEOL,QAAAA,IAAI,GAAE;AACV,cAAIM,MAAW,GAAG,KAAKC,IAAvB;;AACA,cAAG,KAAKN,SAAL,EAAH,EAAoB;AAChB;AACA;AACA;AACAR,YAAAA,IAAI,CAACe,cAAL,CAAoBhB,KAAK,CAACiB,oBAA1B;AACH,WALD,MAKK;AACD;AACA;AACA;AACAhB,YAAAA,IAAI,CAACe,cAAL,CAAoBhB,KAAK,CAACiB,oBAA1B;AACH;AACJ;AAGD;;;AACAC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AApC+B,O","sourcesContent":["import { _decorator, Component, Node, View, macro, Size, Vec3, view } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// property{\n//     canvasRot:number,\n\n// }\n\n@ccclass('Main')\nexport class Main extends Component {\n    \n    start() {\n        // View.instance.getResolutionPolicy();\n        // View.instance.getDesignResolutionSize();\n        // View.instance.setResolutionPolicy(macro.ORIENTATION_PORTRAIT);\n        View.instance.setResizeCallback(()=>{\n            this.init();\n        });\n        this.init();\n    }\n\n    private checkLand():boolean {\n        let frameSize:Size = View.instance.getFrameSize();\n        return frameSize.width>frameSize.height;\n    }\n\n    private init(){\n        let canvas:Node = this.node;\n        if(this.checkLand()){\n            // canvas.setRotationFromEuler(new Vec3(0,0,-90));\n            // canvas.angle = -90;\n            // View.instance.setOrientation(macro.ORIENTATION_PORTRAIT);\n            view.setOrientation(macro.ORIENTATION_PORTRAIT)\n        }else{\n            // View.instance.setOrientation(macro.ORIENTATION_PORTRAIT);\n            // canvas.setRotationFromEuler(new Vec3(0,0,0));\n            // canvas.angle = 0;\n            view.setOrientation(macro.ORIENTATION_PORTRAIT)\n        }\n    }\n\n\n    /*  */\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}